* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}
/* Variables */
:root {
  --loader-color: #00ff0a;
  --loader-bg: #042104;
  --primary-color: #4caf50;
}

/* Utilies */
.center-view {
  display: grid;
  place-items: center;
  min-height: 100vh;
}
.center {
  display: grid;
  place-items: center;
  text-transform: capitalize;
}
ul {
  list-style-type: none;
}
p {
  margin: 1rem 0;
}
h1,
h2,
h3,
h4 {
  margin: 1rem 0;
}

/* Loader Component */

.loader-container {
  display: grid;
  place-items: center;
  min-height: 100vh;
  background-color: var(--loader-bg);
  animation: animateBg 10s linear infinite;
}

@keyframes animateBg {
  0% {
    filter: hue-rotate(0deg);
  }
  100% {
    filter: hue-rotate(360deg);
  }
}

.loader-container .loader {
  position: relative;
  width: 200px;
  height: 200px;
  border-radius: 50%;
  background: #0d2323;
  animation: animate 2s linear infinite;
}
@keyframes animate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.loader-container .loader::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 50%;
  height: 100%;
  background: linear-gradient(to top, transparent, rgba(0, 255, 10, 0.4));
  background-size: 100px 180px;
  background-repeat: no-repeat;
  border-top-left-radius: 100px;
  border-bottom-left-radius: 100px;
}

.loader-container .loader::after {
  content: '';
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: var(--loader-color);
  z-index: 10;
  box-shadow: 0 0 10px var(--loader-color), 0 0 20px var(--loader-color),
    0 0 30px var(--loader-color), 0 0 40px var(--loader-color),
    0 0 50px var(--loader-color), 0 0 60px var(--loader-color),
    0 0 70px var(--loader-color), 0 0 80px var(--loader-color),
    0 0 90px var(--loader-color), 0 0 100px var(--loader-color);
  /* box-shadow: 0 0 10px var(--loader-color), 0 0 20px var(--loader-color),
    0 0 40px var(--loader-color), 0 0 60px var(--loader-color),
    0 0 80px var(--loader-color), 0 0 100px var(--loader-color); */
}

.loader-container .loader span {
  position: absolute;
  top: 20px;
  left: 20px;
  right: 20px;
  bottom: 20px;
  background: var(--loader-bg);
  border-radius: 50%;
}

/* Login Component */

.login-container {
  display: grid;
  place-items: center;
  min-height: 100vh;
  background: #000;
}

.login-container .login {
  position: relative;
  width: 450px;
  min-height: 300px;
  background: rgba(255, 255, 255, 0.05);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 1);
}

.login-container .login:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 50%;
  height: 100%;
  background: rgba(255, 255, 255, 0.1);
  pointer-events: none;
}
.login-container .login::after {
  content: '';
  position: absolute;
  top: -5;
  left: -5;
  right: -5;
  bottom: -5;
  width: 100%;
  height: 100%;
  background: linear-gradient(45deg, #ff0047, #6eff00);
  pointer-events: none;
  animation: animateLog 10s linear infinite;
}

@keyframes animateLog {
  0% {
    filter: blur(60px) hue-rotate(0deg);
  }
  0% {
    filter: blur(60px) hue-rotate(360deg);
  }
}

.login-container .login .form {
  position: absolute;
  width: 100%;
  height: 100%;
  padding: 40px;
  z-index: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.login-container .login .form h2 {
  margin: 0;
  padding: 0;
  color: #fff;
  font-size: 24px;
}
.login-container .login .form select {
  width: 100%;
  height: 40px;
}
.login-container .login .form button {
  background: #fff;
  color: #000;
}

/* NavBar */
.topnav {
  background-color: #333;
  color: #fff;
  overflow: hidden;
  display: flex;
  justify-content: space-around;
  align-items: center;
}

.topnav a {
  float: left;
  color: #f2f2f2;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
  font-size: 17px;
}

.topnav a:hover {
  background-color: #ddd;
  color: black;
}

.topnav a.active {
  background-color: var(--primary-color);
  color: white;
}

.topnav .logout {
  float: left;
  color: #f2f2f2;
  cursor: pointer;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
  font-size: 17px;
}

.topnav .logout:hover {
  background-color: #ddd;
  color: black;
}

.topnav .logout.active {
  background-color: var(--primary-color);
  color: white;
}

/* Card */

.card {
  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.4);
  /* max-width: 300px; */
  width: 100%;
  margin: auto;
  text-align: center;
}

button {
  border: none;
  outline: 0;
  display: inline-block;
  padding: 8px;
  color: white;
  background-color: #000;
  text-align: center;
  cursor: pointer;
  width: 100%;
  font-size: 18px;
}

button:hover {
  opacity: 0.7;
}

/* questions-list */
.questions-list {
  display: grid;
  place-content: center;
  grid-template-columns: repeat(auto-fit, [col-start] 300px [col-end]);
  gap: 40px 100px;
  width: 90%;
  margin: 40px auto;
}

/* Leaderboard Component */
.content-table {
  border-collapse: collapse;
  margin: 25px auto;
  font-size: 0.9em;
  min-width: 80%;
  border-radius: 5px 5px 0 0;
  overflow: hidden;
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
}

.content-table thead tr {
  background-color: var(--primary-color);
  color: #ffffff;
  text-align: left;
  font-weight: bold;
}

.content-table th,
.content-table td {
  padding: 12px 15px;
  text-align: center;
}

.content-table tbody tr {
  border-bottom: 1px solid #dddddd;
}

.content-table tbody tr:nth-of-type(even) {
  background-color: #f3f3f3;
}

.content-table tbody tr:last-of-type {
  border-bottom: 2px solid var(--primary-color);
}

.content-table tbody tr.active-row {
  font-weight: bold;
  color: var(--primary-color);
}

.center-text {
  text-align: center;
}
/* NewQuestion Component */

/* Bordered form */
.new-question {
  border: 3px solid #f1f1f1;
  width: 80vw;
  min-width: 300px;
  margin: 100px auto;
}

/* Full-width inputs */
input[type='text'],
input[type='password'] {
  width: 100%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  box-sizing: border-box;
}

/* Set a style for all buttons */
.new-question button {
  background-color: var(--primary-color);
  color: white;
  padding: 14px 20px;
  margin: 8px 0;
  border: none;
  cursor: pointer;
  width: 100%;
}

/* Add a hover effect for buttons */
.new-question button:hover {
  opacity: 0.8;
}

.new-question button:disabled {
  background-color: gray;
  opacity: 1;
}

/* Center the avatar image inside this container */
.new-question .imgcontainer {
  text-align: center;
  margin: 24px 0 12px 0;
}

/* Avatar image */
.new-question .imgcontainer img.avatar {
  width: 40%;
  border-radius: 50%;
}

/* Add padding to containers */
.new-question .container {
  padding: 16px;
}

/* tabs */
.tab {
  display: flex;
  overflow: hidden;
  border: 1px solid #ccc;
  background-color: #f1f1f1;
}

/* Style the buttons that are used to open the tab content */
.tab button {
  background-color: inherit;
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 14px 16px;
  transition: 0.3s;
  color: #000;
}

/* Change background color of buttons on hover */
.tab button:hover {
  background-color: #ddd;
}

/* Create an active/current tablink class */
.tab button.active {
  background-color: #ccc;
}

/* question-detailes component*/
.question-detailes {
  width: 80vw;
  margin: 80px auto;
}

.question-detailes .card {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 40px;
  padding: 20px;
}

.question-detailes .card .avatar {
  width: 100%;
  height: 100%;
  border-radius: 50%;
}
.question-detailes .card .avatar img {
  width: 100%;
}

.btn1 {
  height: 150px;
  margin: 5px 0;
  background: red;
}
.btn2 {
  height: 150px;
  margin: 5px 0;
  background: blue;
}

.btn1:disabled,
.btn2:disabled {
  background: rgba(0, 0, 0, 0.15);
  color: #000;
}

.selected {
  border: 5px solid red;
}
